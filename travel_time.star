"""
Applet: Travel Time
Summary: Show the time of the travel
Description: You can enter two locations, and you will be given the approximate time it takes to travel from one to the other.
Author: angeljpr6
"""

load("render.star", "render")
load("schema.star", "schema")
load("encoding/base64.star", "base64")
load("time.star", "time")
load("http.star", "http")
load("encoding/json.star", "json")

# Imagen del coche en la primera posicion
CAR_1 = base64.decode("""
iVBORw0KGgoAAAANSUhEUgAAABkAAAALCAYAAACK9ybzAAAAxHpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjabVDbDcMgDPxnio7gFw+PA00qdYOOX4OdKml7iMP2ocM47a/nI90mCCVJrq1oKWAQFaVuQQNHX4wgiz3R0PBaTzBCICuxnexpK3H/qOPHwI9uUT4ZtXsI4yqohH/7MoqHeHZEFmxhpGHE5AKGQfdvQdFWz18YO1zRfKdJI1xXR/CbS7XpbdneYaKdkcGYuXgDPLck7hbI4mwX0daMq3N0YgP5N6cD6Q2H71oAB9SRMgAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVf09ZKqTjYoYhDhupkFxVxLFUsgoXSVmjVweTSL2jSkqS4OAquBQc/FqsOLs66OrgKguAHiLODk6KLlPi/pNAixoPjfry797h7BwjtGlMNXxxQNVPPJBNivrAqBl7hgx9BDCAiMaORyi7m4Dq+7uHh612MZ7mf+3MMKUWDAR6ROM4aukm8QTy7aTY47xOHWUVSiM+JJ3W6IPEj12WH3ziXbRZ4ZljPZeaJw8RiuY/lPmYVXSWeIY4qqkb5Qt5hhfMWZ7XWZN178heGitpKlus0x5DEElJIQ4SMJqqowUSMVo0UAxnaT7j4R21/mlwyuapg5FhAHSok2w/+B7+7NUrTU05SKAH4XyzrYxwI7AKdlmV9H1tW5wTwPgNXWs9fbwNzn6S3elr0CBjeBi6ue5q8B1zuAJGnhqRLtuSlKZRKwPsZfVMBGLkFgmtOb919nD4AOepq+QY4OAQmypS97vLuwf7e/j3T7e8HOBtyjwluk/YAAA12aVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOjY3Mjc2MDE5LTZiZjQtNGI1My05NmNhLTU0NzIxYTlmY2M0MiIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo4NGM0NDI3NC0zNmVmLTRkOTgtODRjZi02MTk3NDY5N2JlNGYiCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDowNjA4ZDMzMS1iMDQ0LTQ5MWMtOTgxMi1jMTUwZmVhYWI2NzkiCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNzEyMzExNjMwMzM3OTQyIgogICBHSU1QOlZlcnNpb249IjIuMTAuMzYiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCIKICAgeG1wOk1ldGFkYXRhRGF0ZT0iMjAyNDowNDowNVQxMTowNzowNyswMTowMCIKICAgeG1wOk1vZGlmeURhdGU9IjIwMjQ6MDQ6MDVUMTE6MDc6MDcrMDE6MDAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo1NjgzZjQ0Yi03YzVkLTQ1OTktOTZhZC04MDk0ZmU3MjcxNzUiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjQtMDQtMDVUMTE6MDc6MTAiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+sYbRbgAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAAd0SU1FB+gEBQoHClaen7IAAACsSURBVDjLtZM9DgIhFIQ/9gokVpYmnsELUL17aOl1vAcVNzGhpDLxDM9m2bgbEMQ4BeFn3psZCIZ+aGXftApNr8Dt/
gDgfNyR53nd6jM553QwAUAW1JEkS9FzfwDApsgAzDLkNCEEA2hu/CtmY2bij5jN6uq6vPcKcLpcS47oSbjl2hSLb7K6Lpsi3nsAROSjUIlbFdmkWx2KSFWkxu35J/rurlHzDbeYTke5L1txS12l4WPNAAAAAElFTkSuQmCC
""")

# Imagen del coche en la segunda posicion
CAR_2 = base64.decode("""
iVBORw0KGgoAAAANSUhEUgAAABkAAAALCAYAAACK9ybzAAAAxHpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjabVDREcMgCP1nio4AgkbG0cbedYOOXxTSS9ri8QQe90RgvJ4PuE1LJCB5q0VLQTNR0dQsqOjWFhLKQk80OLrWAXsQyUpsN3taS/QfdfoI+NUsyieheg+iXwmV0K9fQvEQz4mSBXsIaQhxcoJCoPm3sGjdzl/oA69W3WFCD9U1Ef7mstn29mzvcEqDidGQufgAPF2AmwWyMFsj2WnmsvDYiS3k354OgzeGp1n4sGhJlgAAAYRpQ0NQSUNDIHByb2ZpbGUAAHicfZE9SMNAHMVf05ZKaXGwg4hDhtrJLiriWKpYBAulrdCqg8n1E5o0JCkujoJrwcGPxaqDi7OuDq6CIPgB4uzgpOgiJf4vKbSI8eC4H+/uPe7eAUKnwRTDlwAU1dSzqaRYKK6KgVf44EcQYcQkZmjp3GIeruPrHh6+3sV5lvu5P0e4VDYY4BGJE0zTTeIN4tlNU+O8TxxhNalEfE48qdMFiR+5Ljv8xrlqs8AzI3o+O08cIRarAywPMKvpCvEMcbSkqJQvFBwucd7irDRarHdP/sJQWV3JcZ3mOFJYQhoZiJDRQh0NmIjTqpJiIEv7SRf/mO3PkEsmVx2MHAtoQoFk+8H/4He3RmV6ykkKJQH/i2V9TACBXaDbtqzvY8vqngDeZ+BK7fubHWDuk/R2X4seAcPbwMV1X5P3gMsdYPRJk3TJlrw0hUoFeD+jbyoCI7dAcM3prbeP0wcgT10t3wAHh0CsStnrLu8eGuzt3zO9/n4AbGpypA2DdPoAAA12aVRYdFhNTDpjb20uYWRvYmUueG1wAAAAAAA8P3hwYWNrZXQgYmVnaW49Iu+7vyIgaWQ9Ilc1TTBNcENlaGlIenJlU3pOVGN6a2M5ZCI/Pgo8eDp4bXBtZXRhIHhtbG5zOng9ImFkb2JlOm5zOm1ldGEvIiB4OnhtcHRrPSJYTVAgQ29yZSA0LjQuMC1FeGl2MiI+CiA8cmRmOlJERiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPgogIDxyZGY6RGVzY3JpcHRpb24gcmRmOmFib3V0PSIiCiAgICB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIKICAgIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVzb3VyY2VFdmVudCMiCiAgICB4bWxuczpHSU1QPSJodHRwOi8vd3d3LmdpbXAub3JnL3htcC8iCiAgICB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iCiAgICB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIKICAgIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIKICAgeG1wTU06RG9jdW1lbnRJRD0iZ2ltcDpkb2NpZDpnaW1wOmZjYTBkZTM1LTc4NjgtNDU1My1iNjE5LWRkYjQzYmMwOWQwYyIKICAgeG1wTU06SW5zdGFuY2VJRD0ieG1wLmlpZDo3YzdmMTU4Ny1mNDIzLTQ4ZWMtOTcyZS00MGQ4OTRmMDI0MzciCiAgIHhtcE1NOk9yaWdpbmFsRG9jdW1lbnRJRD0ieG1wLmRpZDo2ZGY2YTU4Ny1kYWY2LTQ4MmUtYjY1ZS1iMGU3OTk3YjRhY2QiCiAgIEdJTVA6QVBJPSIyLjAiCiAgIEdJTVA6UGxhdGZvcm09IldpbmRvd3MiCiAgIEdJTVA6VGltZVN0YW1wPSIxNzEyMzEyMDUyODU5MTM4IgogICBHSU1QOlZlcnNpb249IjIuMTAuMzYiCiAgIGRjOkZvcm1hdD0iaW1hZ2UvcG5nIgogICB0aWZmOk9yaWVudGF0aW9uPSIxIgogICB4bXA6Q3JlYXRvclRvb2w9IkdJTVAgMi4xMCIKICAgeG1wOk1ldGFkYXRhRGF0ZT0iMjAyNDowNDowNVQxMToxNDoxMCswMTowMCIKICAgeG1wOk1vZGlmeURhdGU9IjIwMjQ6MDQ6MDVUMTE6MTQ6MTArMDE6MDAiPgogICA8eG1wTU06SGlzdG9yeT4KICAgIDxyZGY6U2VxPgogICAgIDxyZGY6bGkKICAgICAgc3RFdnQ6YWN0aW9uPSJzYXZlZCIKICAgICAgc3RFdnQ6Y2hhbmdlZD0iLyIKICAgICAgc3RFdnQ6aW5zdGFuY2VJRD0ieG1wLmlpZDo3NTI0MzZiZS0wODcxLTRhZGYtYjMwZi0wMjQwZGQ1NjI4N2UiCiAgICAgIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkdpbXAgMi4xMCAoV2luZG93cykiCiAgICAgIHN0RXZ0OndoZW49IjIwMjQtMDQtMDVUMTE6MTQ6MTIiLz4KICAgIDwvcmRmOlNlcT4KICAgPC94bXBNTTpIaXN0b3J5PgogIDwvcmRmOkRlc2NyaXB0aW9uPgogPC9yZGY6UkRGPgo8L3g6eG1wbWV0YT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgIAo8P3hwYWNrZXQgZW5kPSJ3Ij8+6fWeygAAAAZiS0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAOxAAADsQBlSsOGwAAAAd0SU1FB+gEBQoODG4/gc4AAACsSURBVDjLpZO9DQIxDIW/nNggEhUlEjOwgCvvASXrsEeWQUqZCokZTAGR7k7JJQRXifP8fizF0V9W6bvWoOsVuD
+eAFxOe/I531s8k4iYiNhAAoAsuInZtYhfhyMA/uN47r7HjKvFtEz8b/kUAdwE0LGyofqatUWSEIIBnK+3kiN6Eq6xPsX2unyKhBAAUNVNoRK2KrJKt3hU1apIDdvzT2zurjHzC7aYzkaxb5qPTPM1E93wAAAAAElFTkSuQmCC
""")

# Imagen de una casa hasta un destino
ROUTE = base64.decode("""
iVBORw0KGgoAAAANSUhEUgAAAC0AAAAMCAYAAAD26jQJAAAAxnpUWHRSYXcgcHJvZmlsZSB0eXBlIGV4aWYAAHjabVDbDcMwCPxnio7Ay69xnMaVukHHLzakSqKe5QMDOgMwPu8XPCaYFDSVmlvOaNCmjbs5FR19MaEuXuA9cnSNAz4jwRYSs+LPmqP+iNNPwE03L52EagjRdk00Df16E4qPZHbE5kSH0EJI2BMUAt3HwtxqOY+wDbyi+oVJ2zF3iuLbW4ttb0/2jzAPIUFjkewNyLwK0s3RxckKyU63oskqJTqxhfzb0wH4AsuoWi6ptpxZAAABhGlDQ1BJQ0MgcHJvZmlsZQAAeJx9kT1Iw0AcxV/TlkqpKNhBpEOG6mQXFXEsVSyChdJWaNXB5NIvaNKSpLg4Cq4FBz8Wqw4uzro6uAqC4AeIs4OToouU+L+k0CLGg+N+vLv3uHsHCO0aUw1fHFA1U88kE2K+sCoGXuGDH0FEMCwxo5HKLubgOr7u4eHrXYxnuZ/7cwwqRYMBHpE4zhq6SbxBPLtpNjjvE4dZRVKIz4kndbog8SPXZYffOJdtFnhmWM9l5onDxGK5j+U+ZhVdJZ4hjiqqRvlC3mGF8xZntdZk3XvyF4aK2kqW6zQjSGIJKaQhQkYTVdRgIkarRoqBDO0nXPxjtj9NLplcVTByLKAOFZLtB/+D390apekpJymUAPwvlvUxDgR2gU7Lsr6PLatzAnifgSut56+3gblP0ls9LXoEDG0DF9c9Td4DLneA0aeGpEu25KUplErA+xl9UwEYuQWCa05v3X2cPgA56mr5Bjg4BCbKlL3u8u6B/t7+PdPt7wdbHXKdsM4WawAADXZpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+Cjx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IlhNUCBDb3JlIDQuNC4wLUV4aXYyIj4KIDxyZGY6UkRGIHhtbG5zOnJkZj0iaHR0cDovL3d3dy53My5vcmcvMTk5OS8wMi8yMi1yZGYtc3ludGF4LW5zIyI+CiAgPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIKICAgIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIgogICAgeG1sbnM6c3RFdnQ9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZUV2ZW50IyIKICAgIHhtbG5zOkdJTVA9Imh0dHA6Ly93d3cuZ2ltcC5vcmcveG1wLyIKICAgIHhtbG5zOmRjPSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIKICAgIHhtbG5zOnRpZmY9Imh0dHA6Ly9ucy5hZG9iZS5jb20vdGlmZi8xLjAvIgogICAgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIgogICB4bXBNTTpEb2N1bWVudElEPSJnaW1wOmRvY2lkOmdpbXA6ODNhNTc5OWUtODFhMi00MjU1LTk3ZmYtOWI5Y2U3MGJkZTJmIgogICB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmU2OTdjNjllLWUwMTEtNDNhNS1hZWE1LTFlODM0YTNmOTYwNSIKICAgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOmFmNjViMWNlLTBhZTctNDA4MS05MDc0LTI1ZWM1ZTFmMTZmMiIKICAgR0lNUDpBUEk9IjIuMCIKICAgR0lNUDpQbGF0Zm9ybT0iV2luZG93cyIKICAgR0lNUDpUaW1lU3RhbXA9IjE3MTIzMTMxMDkzNjczODYiCiAgIEdJTVA6VmVyc2lvbj0iMi4xMC4zNiIKICAgZGM6Rm9ybWF0PSJpbWFnZS9wbmciCiAgIHRpZmY6T3JpZW50YXRpb249IjEiCiAgIHhtcDpDcmVhdG9yVG9vbD0iR0lNUCAyLjEwIgogICB4bXA6TWV0YWRhdGFEYXRlPSIyMDI0OjA0OjA1VDExOjMxOjQ3KzAxOjAwIgogICB4bXA6TW9kaWZ5RGF0ZT0iMjAyNDowNDowNVQxMTozMTo0NyswMTowMCI+CiAgIDx4bXBNTTpIaXN0b3J5PgogICAgPHJkZjpTZXE+CiAgICAgPHJkZjpsaQogICAgICBzdEV2dDphY3Rpb249InNhdmVkIgogICAgICBzdEV2dDpjaGFuZ2VkPSIvIgogICAgICBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOjhmNGU5NWM4LWY3NDAtNGQ0My05MTQ1LTUxNzkwYWM0ZjczNSIKICAgICAgc3RFdnQ6c29mdHdhcmVBZ2VudD0iR2ltcCAyLjEwIChXaW5kb3dzKSIKICAgICAgc3RFdnQ6d2hlbj0iMjAyNC0wNC0wNVQxMTozMTo0OSIvPgogICAgPC9yZGY6U2VxPgogICA8L3htcE1NOkhpc3Rvcnk+CiAgPC9yZGY6RGVzY3JpcHRpb24+CiA8L3JkZjpSREY+CjwveDp4bXBtZXRhPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgCjw/eHBhY2tldCBlbmQ9InciPz4RryiqAAAABmJLR0QA7QAcACQAOAbUAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJTUUH6AQFCh8xZY7uzwAAALlJREFUSMfNlDEOwjAQBHdRagoiOuiAVyR8JCUSypuQXPIR+AW4wx0KBTzgqBIlxhgjIeztbnXFaLV3hKVmtpD+nBtNJCb6gFMF5yfgmOAuptxoMgQ4BriPiaH
A/wZvuSaXc+fd5ksAQNY3wwoVv94ZElebrhN6d7oCALar6WDhnS+H8aBWXN/5S9+nkctUVQlVlcmmTxF5PcQHoeoCm/3RUWlG/SC50XQnXRdJJGp/qm6WLxUD3k78CSzPfcCiDd8GAAAAAElFTkSuQmCC
""")

# url de la api de Google que calcula el timepo que tardas de una ubicacion a otra
API_URL = 'https://maps.googleapis.com/maps/api/distancematrix/json'


def main(config):

    # Muestra la hora actual y le da formato
    current_time = time.now()
    formatted_time = current_time.format("03:04")

    # Creamos un origen y un destino por defecto
    origin = config.str("origen", "Tamaraceite")
    destination = config.str("destino", "Triana, Las Palmas")

    # Creamos una variable con los parametros que vamos a enviar a la api
    params = {
        "origins": origin,
        "destinations": destination,
        "key": "AIzaSyD6dA4pWXXjFijuCxLIfrf1luN6mjcFBcE", 
    }

    # Obtenemos la respuesta de la api y la guardamos
    rep = http.get(API_URL, params=params)

    # Si todo sale bien pasamos la respuesta a json y cogemos la duracion del viaje la pasamos a un texto junto a las ubicaciones y lo guardamos en una variable
    if rep.status_code == 200:
        data = rep.json()
        if data["status"] == "OK":
            duration = data["rows"][0]["elements"][0].get("duration",{}).get("text", "Error al obtener el tiempo de viaje")
            travel_time_text = "       {}: {} - {}".format(duration,origin,destination)
        else:
            travel_time_text = "Error al obtener el tiempo de viaje"
    else:
        travel_time_text = "Error al conectar con Google Maps"

    return render.Root(
        child = render.Column(
            children = [
                render.Row(
                    cross_align = "start",
                    children = [
                        render.Box(
                            width = 27,
                            height = 10,
                            child = render.Animation(
                                # Para controlar la velocidad de la animacion del coche ponemos la misma imagen repetidas veces y hacer que vaya mas despacio
                                children = [
                                    render.Image(src = CAR_1),
                                    render.Image(src = CAR_1),
                                    render.Image(src = CAR_1),
                                    render.Image(src = CAR_1),
                                    render.Image(src = CAR_1),
                                    render.Image(src = CAR_1),
                                    render.Image(src = CAR_1),
                                    render.Image(src = CAR_2),
                                    render.Image(src = CAR_2),
                                    render.Image(src = CAR_2),
                                    render.Image(src = CAR_2),
                                    render.Image(src = CAR_2),
                                    render.Image(src = CAR_2),
                                    render.Image(src = CAR_2),
                                ]
                            ),
                        ),
                        # Aqui mostramos la hora actual
                        render.Box(
                            height = 12,
                            child = render.Text(
                                content = formatted_time,
                                font = "tb-8",
                                color = "#D8A01F",
                            ),
                        ),
                    ],
                ),
                # En esta parte mostramos el resultado de la consuta a la api
                render.Row(
                    children = [
                        render.Box(
                            height = 8,
                            child = render.Marquee(
                                width=64,
                                child = render.Text(
                                        content = travel_time_text,
                                ),
                                offset_start=0,
                                offset_end=0,
                            )
                        )
                    ]
                ),
                # Muestra la imagen de la variable ROUTE
                render.Row(
                    expanded = True,
                    main_align = "center",
                    children = [
                        render.Image(ROUTE)
                    ]
                )
            ]
        )
    )

# Con esta funcion pedimos al usuario los aprametro de ubicacion de origen y ubicacion de destino
def get_schema():
    return schema.Schema(
        version="1",
        fields=[
            schema.Text(
                id="origen",
                name="Origen",
                desc="Introduce el origen",
                icon="map_pin",
            ),
            schema.Text(
                id="destino",
                name="Destino",
                desc="Introduce el destino",
                icon="map_pin",
            ),
        ],
    )